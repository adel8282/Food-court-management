package forms;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.group7.nomnom.Complaint;
import com.google.gson.Gson;
import com.group7.nomnom.FileHandler;
import static com.group7.nomnom.FileHandler.readFromFile;
import com.group7.nomnom.Manager;
import com.group7.nomnom.MenuItem;
import com.group7.nomnom.Review;
import com.group7.nomnom.User;
import static com.group7.nomnom.User.login;
import static com.group7.nomnom.User.updateName;
import static com.group7.nomnom.User.updatePassword;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sohaib Abuosba
 */
public class manager_page extends javax.swing.JFrame {
    private static final Gson gson = new Gson();
  private final User user;
 
 
 


  
    public manager_page(User user) {
        initComponents();
        this.user = user;
        ProfileNameMenu.setText(user.getName());
        profileNameLabel.setText(user.getName());
        NameProfileLabel.setText(user.getName());
        UserNameProfileLabel.setText(user.getUsername());
        NameRevenue.setText(user.getName());
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        viewrevenuebtn = new javax.swing.JButton();
        managemenubtn = new javax.swing.JButton();
        reviewbtn = new javax.swing.JButton();
        profilebtn = new javax.swing.JButton();
        DeliveryReviewBtn = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        ProfileNameMenu = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        profiletab = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        vendorPerformanceTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        dailyEarningsLabel = new javax.swing.JLabel();
        monthlyEarningsLabel = new javax.swing.JLabel();
        yearlyEarningsLabel = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        NameRevenue = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        menutab = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        vendorTable = new javax.swing.JTable();
        vendorSearchBartxt1 = new javax.swing.JTextField();
        vendorsearchbtn = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MenuTable = new javax.swing.JTable();
        vendormenuSearchBartxt = new javax.swing.JTextField();
        vendormenusearchbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        deliveryandOrderReviewTable = new javax.swing.JTable();
        filterDiliveryOrderReview = new javax.swing.JComboBox<>();
        vendorReviewSearchBartxt = new javax.swing.JTextField();
        vendorReviewsearchbtn = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reviewcomplainttable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        MainProfileTab = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        profileNameLabel = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton3 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        NewNameField = new javax.swing.JTextPane();
        NewNameUpdatebtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        CurrentPasswordField = new javax.swing.JPasswordField();
        NewPasswordField = new javax.swing.JPasswordField();
        repeatPasswordField = new javax.swing.JPasswordField();
        NewPasswordbtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        UserNameProfileLabel = new javax.swing.JLabel();
        NameProfileLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(248, 250, 252));

        jPanel1.setBackground(new java.awt.Color(255, 224, 200));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setVerifyInputWhenFocusTarget(false);
        jPanel1.setLayout(null);

        viewrevenuebtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        viewrevenuebtn.setForeground(new java.awt.Color(255, 96, 31));
        viewrevenuebtn.setText("View revenue reports");
        viewrevenuebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewrevenuebtnActionPerformed(evt);
            }
        });
        jPanel1.add(viewrevenuebtn);
        viewrevenuebtn.setBounds(10, 70, 170, 40);

        managemenubtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        managemenubtn.setForeground(new java.awt.Color(255, 96, 31));
        managemenubtn.setText("Manage Vendor Menu items");
        managemenubtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managemenubtnActionPerformed(evt);
            }
        });
        jPanel1.add(managemenubtn);
        managemenubtn.setBounds(10, 120, 170, 40);

        reviewbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        reviewbtn.setForeground(new java.awt.Color(255, 96, 31));
        reviewbtn.setText("Review complaints");
        reviewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewbtnActionPerformed(evt);
            }
        });
        jPanel1.add(reviewbtn);
        reviewbtn.setBounds(10, 220, 170, 40);

        profilebtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        profilebtn.setForeground(new java.awt.Color(255, 96, 31));
        profilebtn.setText("PROFILE");
        profilebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profilebtnActionPerformed(evt);
            }
        });
        jPanel1.add(profilebtn);
        profilebtn.setBounds(10, 270, 170, 40);

        DeliveryReviewBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DeliveryReviewBtn.setForeground(new java.awt.Color(255, 96, 31));
        DeliveryReviewBtn.setText("delivery/order review");
        DeliveryReviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeliveryReviewBtnActionPerformed(evt);
            }
        });
        jPanel1.add(DeliveryReviewBtn);
        DeliveryReviewBtn.setBounds(10, 170, 170, 40);

        ProfileNameMenu.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        ProfileNameMenu.setForeground(new java.awt.Color(255, 96, 31));
        ProfileNameMenu.setText("jLabel3");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProfileNameMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(ProfileNameMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jPanel1.add(jPanel16);
        jPanel16.setBounds(0, 480, 200, 70);

        jPanel2.setBackground(new java.awt.Color(248, 250, 252));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/mqaid/Documents/NomNom-oms/src//main/java/assets/login logo.png")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBackground(new java.awt.Color(236, 88, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1002, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        profiletab.setBackground(new java.awt.Color(248, 250, 252));

        vendorPerformanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Vendor", "Vendor Performance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vendorPerformanceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendorPerformanceTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(vendorPerformanceTable);
        if (vendorPerformanceTable.getColumnModel().getColumnCount() > 0) {
            vendorPerformanceTable.getColumnModel().getColumn(0).setResizable(false);
            vendorPerformanceTable.getColumnModel().getColumn(1).setResizable(false);
            vendorPerformanceTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Daily Earnings");

        dailyEarningsLabel.setText("daily");

        monthlyEarningsLabel.setText("monthly");

        yearlyEarningsLabel.setText("yearly");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("Monthly Earnings");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("Yearly Earnings");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 3, 18)); // NOI18N
        jLabel3.setText("Welcome ");

        NameRevenue.setFont(new java.awt.Font("Segoe Print", 3, 24)); // NOI18N
        NameRevenue.setText("jLabel4");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(monthlyEarningsLabel))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(yearlyEarningsLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(dailyEarningsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(NameRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NameRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dailyEarningsLabel)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(monthlyEarningsLabel)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yearlyEarningsLabel)))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        profiletab.addTab("revenue", jPanel4);

        menutab.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(255, 224, 200));

        jScrollPane3.setBackground(new java.awt.Color(248, 250, 252));
        jScrollPane3.setForeground(new java.awt.Color(255, 96, 31));

        vendorTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        vendorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vendor ID", "Vendor Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vendorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendorTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(vendorTable);

        vendorSearchBartxt1.setBackground(new java.awt.Color(248, 250, 252));
        vendorSearchBartxt1.setForeground(new java.awt.Color(204, 204, 204));
        vendorSearchBartxt1.setText("vendor name");
        vendorSearchBartxt1.setBorder(javax.swing.BorderFactory.createTitledBorder("search bar"));
        vendorSearchBartxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorSearchBartxt1ActionPerformed(evt);
            }
        });

        vendorsearchbtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        vendorsearchbtn.setText("search");
        vendorsearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorsearchbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(vendorSearchBartxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(vendorsearchbtn)
                        .addGap(0, 322, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorSearchBartxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vendorsearchbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
        );

        menutab.addTab("vendor", jPanel10);

        jPanel9.setBackground(new java.awt.Color(255, 224, 200));

        MenuTable.setBackground(new java.awt.Color(248, 250, 252));
        MenuTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MenuTable.setForeground(new java.awt.Color(255, 96, 31));
        MenuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "price ", "Item descreption", "is available ", "Delete Item "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(MenuTable);

        vendormenuSearchBartxt.setForeground(new java.awt.Color(204, 204, 204));
        vendormenuSearchBartxt.setText("item name");
        vendormenuSearchBartxt.setBorder(javax.swing.BorderFactory.createTitledBorder("search bar"));
        vendormenuSearchBartxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendormenuSearchBartxtActionPerformed(evt);
            }
        });

        vendormenusearchbtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        vendormenusearchbtn.setText("search");
        vendormenusearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendormenusearchbtnActionPerformed(evt);
            }
        });

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(vendormenuSearchBartxt, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(vendormenusearchbtn)
                .addGap(0, 273, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vendormenuSearchBartxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vendormenusearchbtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menutab.addTab("menu", jPanel9);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(menutab)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(menutab, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        profiletab.addTab("manage vendor menu", jPanel6);

        jPanel11.setBackground(new java.awt.Color(255, 224, 200));

        deliveryandOrderReviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vendor name", "review stars", "review message", "order date", "order status", "order total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(deliveryandOrderReviewTable);
        if (deliveryandOrderReviewTable.getColumnModel().getColumnCount() > 0) {
            deliveryandOrderReviewTable.getColumnModel().getColumn(0).setResizable(false);
            deliveryandOrderReviewTable.getColumnModel().getColumn(1).setResizable(false);
            deliveryandOrderReviewTable.getColumnModel().getColumn(2).setResizable(false);
            deliveryandOrderReviewTable.getColumnModel().getColumn(3).setResizable(false);
            deliveryandOrderReviewTable.getColumnModel().getColumn(4).setResizable(false);
            deliveryandOrderReviewTable.getColumnModel().getColumn(5).setResizable(false);
        }

        filterDiliveryOrderReview.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "sort", "Newest Orders", "Oldest Orders", "Alphabetical", "Highest Total", "Lowest Total" }));
        filterDiliveryOrderReview.setToolTipText("");
        filterDiliveryOrderReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterDiliveryOrderReviewActionPerformed(evt);
            }
        });

        vendorReviewSearchBartxt.setForeground(new java.awt.Color(204, 204, 204));
        vendorReviewSearchBartxt.setText("vendor name");
        vendorReviewSearchBartxt.setBorder(javax.swing.BorderFactory.createTitledBorder("search bar"));
        vendorReviewSearchBartxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorReviewSearchBartxtActionPerformed(evt);
            }
        });

        vendorReviewsearchbtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        vendorReviewsearchbtn.setText("search");
        vendorReviewsearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorReviewsearchbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(vendorReviewSearchBartxt, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(vendorReviewsearchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterDiliveryOrderReview, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(filterDiliveryOrderReview, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vendorReviewsearchbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vendorReviewSearchBartxt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        profiletab.addTab("delivery/order review", jPanel11);

        reviewcomplainttable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        reviewcomplainttable.setForeground(new java.awt.Color(255, 96, 31));
        reviewcomplainttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "complaint ID", "Customer ID", "Order ID", "complaint ", "delete / view"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        // Enable auto-resizing for reviewcomplainttable
        reviewcomplainttable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        reviewcomplainttable.setRowHeight(40);
        reviewcomplainttable.setRowMargin(20);
        reviewcomplainttable.setSelectionForeground(new java.awt.Color(255, 96, 31));
        reviewcomplainttable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(reviewcomplainttable);
        if (reviewcomplainttable.getColumnModel().getColumnCount() > 0) {
            reviewcomplainttable.getColumnModel().getColumn(0).setResizable(false);
            reviewcomplainttable.getColumnModel().getColumn(0).setPreferredWidth(5);
            reviewcomplainttable.getColumnModel().getColumn(1).setResizable(false);
            reviewcomplainttable.getColumnModel().getColumn(1).setPreferredWidth(5);
            reviewcomplainttable.getColumnModel().getColumn(2).setResizable(false);
            reviewcomplainttable.getColumnModel().getColumn(2).setPreferredWidth(5);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );

        profiletab.addTab("review complaints", jPanel7);

        profileNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        profileNameLabel.setText("jLabel1");

        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jToggleButton1.setText("proflie edit");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("LOG OUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(profileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 363, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        MainProfileTab.addTab("profile", jPanel12);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("User information");

        jLabel5.setText("UserName");

        jLabel12.setText("Name");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Update Name");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("New Name");

        jScrollPane7.setViewportView(NewNameField);

        NewNameUpdatebtn.setText("UPDATE");
        NewNameUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewNameUpdatebtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Update the password");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("current password");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("New password");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("repeat password");

        NewPasswordbtn.setText("UPDATE");
        NewPasswordbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPasswordbtnActionPerformed(evt);
            }
        });

        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        UserNameProfileLabel.setText("jLabel3");

        NameProfileLabel.setText("jLabel4");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NewPasswordbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(UserNameProfileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NameProfileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(NewNameUpdatebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(repeatPasswordField)
                                    .addComponent(NewPasswordField)
                                    .addComponent(CurrentPasswordField))))))
                .addGap(73, 73, 73))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(UserNameProfileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(NameProfileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel14))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(NewNameUpdatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(24, 24, 24)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(CurrentPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(NewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(repeatPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(NewPasswordbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainProfileTab.addTab("profile edit", jPanel14);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainProfileTab, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainProfileTab, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        profiletab.addTab("Profile", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(profiletab, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profiletab)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reviewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewbtnActionPerformed
         // Switch to the complaints tab
    profiletab.setSelectedIndex(3);
 
    // Read data from JSON
    JsonObject data = FileHandler.readFromFile();
    JsonArray complaintsArray = data.getAsJsonArray("complaints");
 
    DefaultTableModel tableModel = (DefaultTableModel) reviewcomplainttable.getModel();
 
    // Ensure the checkbox column is editable
    reviewcomplainttable.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(new JCheckBox()));
 
    // Clear any existing rows in the table
    tableModel.setRowCount(0);
 
    // Load JSON complaints into the table
    if (complaintsArray != null) {
        for (JsonElement element : complaintsArray) {
            JsonObject complaintObj = element.getAsJsonObject();
            Complaint complaint = gson.fromJson(complaintObj, Complaint.class);
 
            // Add complaint data to the table
            tableModel.addRow(new Object[]{
                complaint.getComplaint_id(),
                complaint.getcustomer_id(),
                complaint.getorder_id(),
                complaint.getcomplaint_message(),
                false // Checkbox for review action
            });
        }
    }
 
    // Add a listener to open the complaint popup when a row is clicked
    reviewcomplainttable.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting() && reviewcomplainttable.getSelectedRow() != -1) {
            int selectedRow = reviewcomplainttable.getSelectedRow();
            int complaintId = (int) tableModel.getValueAt(selectedRow, 0);
            String complaintMessage = (String) tableModel.getValueAt(selectedRow, 3);
            // Find the existing response if available
            String existingResponse = "";
            for (JsonElement element : complaintsArray) {
                JsonObject complaintObj = element.getAsJsonObject();
                if (complaintObj.get("complaint_id").getAsInt() == complaintId) {
                    existingResponse = complaintObj.has("response") ? complaintObj.get("response").getAsString() : "";
                    break;
                }
            }
 
            // Call the method from Complaint class
            Manager.showComplaintPopup(complaintId, complaintMessage, existingResponse, data);
        }
    });
 
    // Add a listener to detect checkbox selection and delete complaint
    reviewcomplainttable.getModel().addTableModelListener(e -> {
        int row = e.getFirstRow();
        int column = e.getColumn();
        if (column == 4) { // Checkbox column
            Boolean isChecked = (Boolean) reviewcomplainttable.getValueAt(row, column);
            if (isChecked) {
                int complaintId = (int) tableModel.getValueAt(row, 0);
 
                // Call the delete method from Manager class
                Manager.deleteComplaintFromJson(complaintId);
 
                // Refresh the table
                tableModel.removeRow(row);
            }
        }
    });

    }//GEN-LAST:event_reviewbtnActionPerformed

    private void viewrevenuebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewrevenuebtnActionPerformed
         // TODO add your handling code here:
        profiletab.setSelectedIndex(0); 

        JsonObject data = FileHandler.readFromFile();
        JsonArray usersArray = data.getAsJsonArray("users");
        JsonArray ordersArray = data.getAsJsonArray("orders");

        DefaultTableModel tableModel = new DefaultTableModel(
            new Object[]{"ID", "Restaurant", "Vendor Performance"}, 0
        );
        vendorPerformanceTable.setModel(tableModel);

        Map<Integer, Double> vendorSales = new HashMap<>();
        Map<Integer, String> vendorNames = new HashMap<>(); // Store vendor names

        // Populate vendor names from the users array
        for (JsonElement userElement : usersArray) {
            JsonObject user = userElement.getAsJsonObject();
            if (user.get("role").getAsString().equals("vendor") && !user.get("is_deleted").getAsBoolean()) {
                int vendorId = user.get("id").getAsInt();
                String restaurantName = user.get("name").getAsString(); // Get restaurant name
                vendorNames.put(vendorId, restaurantName);
            }
        }

        // Calculate total sales per vendor
        for (JsonElement orderElement : ordersArray) {
            JsonObject order = orderElement.getAsJsonObject();
            int vendorId = order.get("vendor_id").getAsInt();
            double orderTotal = order.get("order_total").getAsDouble();
            vendorSales.put(vendorId, vendorSales.getOrDefault(vendorId, 0.0) + orderTotal);
        }

        // Sort vendors based on sales
        List<Double> salesList = new ArrayList<>(vendorSales.values());
        Collections.sort(salesList, Collections.reverseOrder());

        // Determine performance cutoffs using percentiles
        int totalVendors = salesList.size();
        double excellentThreshold = salesList.get(Math.max(0, (int) (totalVendors * 0.25))); // Top 25%
        double goodThreshold = salesList.get(Math.max(0, (int) (totalVendors * 0.6))); // 60% mark

        // Assign performance levels and populate table
        for (Map.Entry<Integer, String> entry : vendorNames.entrySet()) {
            int vendorId = entry.getKey();
            String restaurantName = entry.getValue(); // Get the restaurant name
            double totalSales = vendorSales.getOrDefault(vendorId, 0.0);

            String performanceLevel = "Needs Improvement"; // Default

            if (totalSales >= excellentThreshold) {
                performanceLevel = "Excellent";
            } else if (totalSales >= goodThreshold) {
                performanceLevel = "Good";
            }

            tableModel.addRow(new Object[]{vendorId, restaurantName, performanceLevel});
        }
    }//GEN-LAST:event_viewrevenuebtnActionPerformed

    private void profilebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profilebtnActionPerformed
        // TODO add your handling code here:
        profiletab.setSelectedIndex(4);
        //display the userName
        String username = user.getUsername();
        UserNameProfileLabel.setText(username);
        
        
        //display the name
        int userId = user.getId();
        String theName = User.displayUser(userId);
        NameProfileLabel.setText(theName);
        
       
    }//GEN-LAST:event_profilebtnActionPerformed

    private void managemenubtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managemenubtnActionPerformed
   // Check which tab is currently active
        profiletab.setSelectedIndex(1);
            

            // Get the table models
            DefaultTableModel vendorTableModel = (DefaultTableModel) vendorTable.getModel();
            DefaultTableModel menuTableModel = (DefaultTableModel) MenuTable.getModel();

            // Set column widths for the Menu table
            MenuTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            MenuTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            MenuTable.getColumnModel().getColumn(2).setPreferredWidth(50);
            MenuTable.getColumnModel().getColumn(3).setPreferredWidth(300);
            MenuTable.getColumnModel().getColumn(4).setPreferredWidth(50);
            MenuTable.getColumnModel().getColumn(5).setPreferredWidth(20);

            // Populate vendor table with data
            MenuItem.populateVendorTable(vendorTableModel);

            // Add listener to vendor table to display menu for the selected vendor
            vendorTable.getSelectionModel().addListSelectionListener(event -> {
                if (!event.getValueIsAdjusting() && vendorTable.getSelectedRow() != -1) {
                    // Get selected vendor ID
                    int selectedVendorId = (int) vendorTableModel.getValueAt(vendorTable.getSelectedRow(), 0);

                    // Switch to the first tab in menutab
                    menutab.setSelectedIndex(0);

                    // Load vendor menu
                    MenuItem.loadVendorMenu(selectedVendorId, menuTableModel, MenuTable);

                    // Add checkbox listener for updating item status
                    MenuItem.DeleteVendorMenuItem(selectedVendorId, MenuTable, menuTableModel);
                }
            });
        




    }//GEN-LAST:event_managemenubtnActionPerformed

    private void vendorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorTableMouseClicked
        // TODO add your handling code here:
        menutab.setSelectedIndex(1);
    }//GEN-LAST:event_vendorTableMouseClicked

    private void vendormenuSearchBartxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendormenuSearchBartxtActionPerformed
      
  
    }//GEN-LAST:event_vendormenuSearchBartxtActionPerformed

    private void vendorSearchBartxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorSearchBartxt1ActionPerformed
        // TODO add your handling code here:
   
    }//GEN-LAST:event_vendorSearchBartxt1ActionPerformed

    private void vendorsearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorsearchbtnActionPerformed
        // TODO add your handling code here:
        String searchText = vendorSearchBartxt1.getText().toLowerCase();

        DefaultTableModel vendorTableModel = (DefaultTableModel) vendorTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(vendorTableModel);
        vendorTable.setRowSorter(sorter);

        if (searchText.trim().isEmpty()) {
            sorter.setRowFilter(null); // Show all vendors when search box is empty
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText, 1)); // Search in vendor name column (index 1)
        }
    }//GEN-LAST:event_vendorsearchbtnActionPerformed

    private void vendormenusearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendormenusearchbtnActionPerformed
        // TODO add your handling code here:
        String searchText = vendormenuSearchBartxt.getText().toLowerCase();

        DefaultTableModel vendorTableModel = (DefaultTableModel) MenuTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(vendorTableModel);
        MenuTable.setRowSorter(sorter);

        if (searchText.trim().isEmpty()) {
            sorter.setRowFilter(null); // Show all vendors when search box is empty
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText, 1)); // Search in vendor name column (index 1)
        }
    }//GEN-LAST:event_vendormenusearchbtnActionPerformed

    private void DeliveryReviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeliveryReviewBtnActionPerformed
        // TODO add your handling code here:
                                                     
     profiletab.setSelectedIndex(2);

    // Get the table model
    DefaultTableModel model = (DefaultTableModel) deliveryandOrderReviewTable.getModel();

    // Load reviews into the table based on the selected filter
    Manager.loadReviewsIntoTable(model, filterDiliveryOrderReview);


    }//GEN-LAST:event_DeliveryReviewBtnActionPerformed

    private void filterDiliveryOrderReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterDiliveryOrderReviewActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) deliveryandOrderReviewTable.getModel();
    
    // Load reviews into the table based on the selected filter
        Manager.loadReviewsIntoTable(model, filterDiliveryOrderReview);
        

    }//GEN-LAST:event_filterDiliveryOrderReviewActionPerformed

    private void vendorReviewsearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorReviewsearchbtnActionPerformed
        // TODO add your handling code here:
        String searchText = vendorReviewSearchBartxt.getText().toLowerCase();

        DefaultTableModel vendorTableModel = (DefaultTableModel) deliveryandOrderReviewTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(vendorTableModel);
        deliveryandOrderReviewTable.setRowSorter(sorter);

        if (searchText.trim().isEmpty()) {
            sorter.setRowFilter(null); // Show all vendors when search box is empty
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText, 0)); // Search in vendor name column (index 1)
        }
        
    }//GEN-LAST:event_vendorReviewsearchbtnActionPerformed

    private void vendorReviewSearchBartxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorReviewSearchBartxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendorReviewSearchBartxtActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        MainProfileTab.setSelectedIndex(1);
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void NewNameUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewNameUpdatebtnActionPerformed
 String newTextName = NewNameField.getText();
    int userId = user.getId();

    // Update the user's name
    updateName(newTextName, userId);
     // Update the field to display the updated name
  String theName = User.displayUser(userId);
    NameProfileLabel.setText(theName);
    ProfileNameMenu.setText(theName);
    // Clear the input field after updating
    NewNameField.setText("");
    }//GEN-LAST:event_NewNameUpdatebtnActionPerformed

    private void NewPasswordbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPasswordbtnActionPerformed
add your handling code here:
        String username = user.getUsername();
        String currentTextPassword = CurrentPasswordField.getText();
        String newTextPassword = NewPasswordField.getText();
        String repeatTextPassword = repeatPasswordField.getText();

        updatePassword( username, currentTextPassword, newTextPassword, repeatTextPassword);
        CurrentPasswordField.setText("");
        NewPasswordField.setText("");
        repeatPasswordField.setText("");
    }//GEN-LAST:event_NewPasswordbtnActionPerformed

    private void vendorPerformanceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorPerformanceTableMouseClicked

        vendorPerformanceTable.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int selectedRow = vendorPerformanceTable.getSelectedRow();
            if (selectedRow != -1) {
                Object vendorIdObj = vendorPerformanceTable.getValueAt(selectedRow, 0);
                int vendorId = Integer.parseInt(vendorIdObj.toString().trim()); // Ensure it's an integer
                System.out.println("Vendor ID Clicked: " + vendorId); // Debugging output
                loadVendorEarnings(vendorId);
            }
        }
    });


    }//GEN-LAST:event_vendorPerformanceTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        menutab.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MainProfileTab.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // Close the current window
        this.dispose();
 
        // Open the Login screen
        login_page login = new login_page();
        login.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField CurrentPasswordField;
    private javax.swing.JButton DeliveryReviewBtn;
    private javax.swing.JTabbedPane MainProfileTab;
    private javax.swing.JTable MenuTable;
    private javax.swing.JLabel NameProfileLabel;
    private javax.swing.JLabel NameRevenue;
    private javax.swing.JTextPane NewNameField;
    private javax.swing.JButton NewNameUpdatebtn;
    private javax.swing.JPasswordField NewPasswordField;
    private javax.swing.JButton NewPasswordbtn;
    private javax.swing.JLabel ProfileNameMenu;
    private javax.swing.JLabel UserNameProfileLabel;
    private javax.swing.JLabel dailyEarningsLabel;
    private javax.swing.JTable deliveryandOrderReviewTable;
    private javax.swing.JComboBox<String> filterDiliveryOrderReview;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private transient javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton managemenubtn;
    private javax.swing.JTabbedPane menutab;
    private javax.swing.JLabel monthlyEarningsLabel;
    private javax.swing.JLabel profileNameLabel;
    private javax.swing.JButton profilebtn;
    private javax.swing.JTabbedPane profiletab;
    private javax.swing.JPasswordField repeatPasswordField;
    private javax.swing.JButton reviewbtn;
    private javax.swing.JTable reviewcomplainttable;
    private javax.swing.JTable vendorPerformanceTable;
    private javax.swing.JTextField vendorReviewSearchBartxt;
    private javax.swing.JButton vendorReviewsearchbtn;
    private javax.swing.JTextField vendorSearchBartxt1;
    private javax.swing.JTable vendorTable;
    private javax.swing.JTextField vendormenuSearchBartxt;
    private javax.swing.JButton vendormenusearchbtn;
    private javax.swing.JButton vendorsearchbtn;
    private javax.swing.JButton viewrevenuebtn;
    private javax.swing.JLabel yearlyEarningsLabel;
    // End of variables declaration//GEN-END:variables

       private void loadVendorEarnings(int vendorId) {
    JsonObject data = FileHandler.readFromFile();
    JsonArray ordersArray = data.getAsJsonArray("orders");

    if (ordersArray == null || ordersArray.size() == 0) {
        System.out.println("No orders found!");
        return;
    }

    LocalDate today = LocalDate.now();
    String currentDate = today.toString(); // YYYY-MM-DD
    String currentMonth = currentDate.substring(0, 7); // YYYY-MM
    String currentYear = currentDate.substring(0, 4);  // YYYY

    double dailyTotal = 0, monthlyTotal = 0, yearlyTotal = 0;

    System.out.println("Checking vendor ID: " + vendorId);
    System.out.println("Total orders found: " + ordersArray.size());

    for (JsonElement orderElement : ordersArray) {
    JsonObject order = orderElement.getAsJsonObject();
    int orderVendorId = order.get("vendor_id").getAsInt();

    if (orderVendorId == vendorId) {
        String orderDateTime = order.get("order_date").getAsString(); // "YYYY-MM-DD HH:mm:ss"
        String orderDate = orderDateTime.substring(0, 10); // Extract "YYYY-MM-DD"

        double orderTotal = order.get("order_total").getAsDouble();
        
        LocalDate orderLocalDate = LocalDate.parse(orderDate); // Convert to LocalDate

        if (orderLocalDate.getYear() == today.getYear()) { // Same year as current year
            yearlyTotal += orderTotal;

            if (orderLocalDate.getMonth() == today.getMonth()) { // Same month
                monthlyTotal += orderTotal;
            }

            if (orderLocalDate.getDayOfYear() == today.getDayOfYear()) { // Same day of year
                dailyTotal += orderTotal;
            }
        }
    }
}
        

    // Debugging output
    System.out.println("Final Calculated Earnings:");
    System.out.println("Daily Earnings: " + dailyTotal);
    System.out.println("Monthly Earnings: " + monthlyTotal);
    System.out.println("Yearly Earnings: " + yearlyTotal);

    // Update Labels
    dailyEarningsLabel.setText("Daily Earnings: $" + String.format("%.2f", dailyTotal));
    monthlyEarningsLabel.setText("Monthly Earnings: $" + String.format("%.2f", monthlyTotal));
    yearlyEarningsLabel.setText("Yearly Earnings: $" + String.format("%.2f", yearlyTotal));
}

    



}
